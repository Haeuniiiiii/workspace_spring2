<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
</head>
<body>
	<h4>Ajax 방식 요청 처리</h4>
	<hr/>
	
	<form action="">
		<p> userId : <input type="text" name="userId" id="userId" /></p>
		<p> password : <input type="text" name="password" id="password" /></p>
	</form>
	
	
	<p>1) 객체 타입의 JSON 요청 데이터 @RequestBody 어노테이션을 지정하여 자바빈즈 매개변수로 처리한다.</p>
	<button type="button" id="registerBtn01">요청01</button>
	
	<p>2) 객체 타입의 JSON 요청 데이터를 문자열 매개변수로 처리한다.(문자열 매개변수로 처리X, MAP을 이용한다.)</p>
	<button type="button" id="registerBtn02">요청02</button>
	
	<p>3) 요청 URL에 쿼리파라미터를 붙여서 전달하면 문자열 매개변수로 처리한다. </p>
	<button type="button" id="registerBtn03">요청03</button>
	
</body>
<script type="text/javascript">
$(function() {

   // ────────────────────────────────────────────────
   // $.ajax()에서 활용되는 기본적인 속성 설명
   // ────────────────────────────────────────────────
   // - url : 요청을 보낼 서버 주소
   // - type or method : HTTP 요청 방식 ("GET", "POST", 등)
   // - contentType : 서버에 전송할 데이터의 타입 (예: "application/json")
   // - headers : 요청에 포함할 커스텀 헤더 정보 (예: 토큰 등)
   // - data : 서버로 보낼 데이터 (문자열 또는 객체)
   // - dataType : 서버로부터 받을 응답 데이터 타입 (예: "json", "text")
   //              → 설정하지 않으면 응답의 Content-Type 보고 자동 판단
   // - success : 요청 성공 시 실행될 콜백 함수
   // - error : 요청 실패 시 실행될 콜백 함수
   // - async : 비동기 여부 (기본 true, false 설정 시 동기 방식 → 사용 권장 X)
   // - timeout : 요청 실패로 간주되기까지의 최대 대기 시간 (밀리초 단위)
   // - beforeSend : 요청이 서버로 전송되기 직전에 실행되는 콜백
   // ────────────────────────────────────────────────

   // 버튼 Element를 jQuery 객체로 선택하여 변수에 저장
   let registerBtn01 = $("#registerBtn01");   // 첫 번째 등록 버튼
   let registerBtn02 = $("#registerBtn02");   // 두 번째 등록 버튼

   // ─────────────────────────────────────
   // [1] registerBtn01 클릭 시 실행될 로직
   // ─────────────────────────────────────
   registerBtn01.on("click", function() {

      // 사용자 입력값 가져오기
      let userId = $("#userId").val();         // 아이디 입력값
      let password = $("#password").val();     // 비밀번호 입력값

      // 사용자 정보를 자바스크립트 객체로 구성
      let userObject = {
         userId: userId,           // userId 키에 입력값 설정
         password: password        // password 키에 입력값 설정
      };

      // Ajax 요청 시작
      $.ajax({
         // 요청을 보낼 서버의 URL (컨트롤러 또는 API 엔드포인트)
         url: "/chapt05/ajax/register01",

         // HTTP 요청 방식 지정
         type: "post",

         // 요청 본문에 포함될 데이터 (객체 → 문자열로 변환)
         data: JSON.stringify(userObject),

         // 서버에 보내는 데이터의 타입을 JSON으로 명시
         contentType: "application/json; charset=utf-8",

         // 요청 성공 시 호출되는 콜백 함수
         success: function(result) {
            console.log("result : " + result);  // 서버 응답 로그 출력

            // 서버 응답이 "SUCCESS"일 경우 알림창 출력
            if (result === "SUCCESS") {
               alert(result);
            }
         },

         // 요청 실패 시 호출되는 콜백 함수
         error: function(error, status, thrown) {
            console.log(error);     // 에러 객체 출력
            console.log(status);    // 상태 문자열 출력
            console.log(thrown);    // 예외 정보 출력
         }
      });

   }); // registerBtn01 End

   // ─────────────────────────────────────
   // [2] registerBtn02 클릭 시 실행될 로직
   // ─────────────────────────────────────
   registerBtn02.on("click", function() {

      // 사용자 입력값 가져오기
      let userId = $("#userId").val();
      let password = $("#password").val();

      // 사용자 정보를 자바스크립트 객체로 구성
      let userObject = {
         userId: userId,
         password: password
      };

      // Ajax 요청 시작
      $.ajax({
         url: "/chapt05/ajax/register02",                 // 다른 URL로 요청
         type: "post",
         data: JSON.stringify(userObject),
         contentType: "application/json; charset=utf-8",

         success: function(result) {
            console.log("result : " + result);           // 응답 로그 출력

            if (result === "SUCCESS") {
               alert(result);
            }
         },

         error: function(error, status, thrown) {
            console.log(error);
            console.log(status);
            console.log(thrown);
         }
      });

   }); // registerBtn02 End

}); // jQuery 문서 준비 완료 함수 종료
</script>

</html>